---
FormatStyle: file
WarningsAsErrors: '*'
HeaderFilterRegex: 'include/|src/|modules/'
ExcludeHeaderFilterRegex: 'build/|usr/|builtin/|prebuilt/|prebuilt-ext/|thirdparty/|thirdparty-ext/|unittest/'

Checks: >
  clang-diagnostic-*,

  clang-analyzer-*,

  google-*,
  -google-readability-braces-around-statements,
  -google-readability-namespace-comments,
  -google-runtime-references,

  readability-*,
  -readability-braces-around-statements,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-named-parameter,
  -readability-redundant-declaration,
  -readability-function-cognitive-complexity,
  -readability-else-after-return,
  -readability-simplify-boolean-expr,
  -readability-use-std-min-max,

  performance-*,
  -performance-move-const-arg,
  -performance-avoid-endl,
  -performance-unnecessary-value-param,

  modernize-*,
  -modernize-return-braced-init-list,
  -modernize-use-trailing-return-type,
  -modernize-concat-nested-namespaces,
  -modernize-use-nodiscard,
  -modernize-avoid-c-arrays,
  -modernize-pass-by-value,

  bugprone-*,
  -bugprone-easily-swappable-parameters,
  -bugprone-unchecked-optional-access,
  -bugprone-branch-clone,
  -bugprone-implicit-widening-of-multiplication-result,
  -bugprone-narrowing-conversions,
  -bugprone-use-after-move,
  -bugprone-narrowing-conversions,
  -bugprone-exception-escape,

CheckOptions:
  - { key: readability-identifier-naming.FunctionCase,                     value: lower_case  }
  - { key: readability-identifier-naming.NamespaceCase,                    value: lower_case  }
  - { key: readability-identifier-naming.VariableCase,                     value: lower_case  }
  - { key: readability-identifier-naming.MemberCase,                       value: lower_case  }
  - { key: readability-identifier-naming.ClassMemberCase,                  value: lower_case  }
  - { key: readability-identifier-naming.ClassCase,                        value: CamelCase   }
  - { key: readability-identifier-naming.StructCase,                       value: CamelCase   }
  - { key: readability-identifier-naming.TemplateParameterCase,            value: CamelCase   }
  - { key: readability-identifier-naming.EnumCase,                         value: CamelCase   }
  - { key: readability-identifier-naming.TypedefCase,                      value: CamelCase   }
  - { key: readability-identifier-naming.EnumConstantCase,                 value: CamelCase   }
  - { key: readability-identifier-naming.EnumConstantPrefix,               value: k           }
  - { key: readability-identifier-naming.ConstexprVariableCase,            value: CamelCase   }
  - { key: readability-identifier-naming.ConstexprVariablePrefix,          value: k           }
  - { key: readability-identifier-naming.GlobalConstantCase,               value: CamelCase   }
  - { key: readability-identifier-naming.GlobalConstantPrefix,             value: k           }
  - { key: readability-identifier-naming.MemberConstantCase,               value: CamelCase   }
  - { key: readability-identifier-naming.MemberConstantPrefix,             value: k           }
  - { key: readability-identifier-naming.StaticConstantCase,               value: CamelCase   }
  - { key: readability-identifier-naming.StaticConstantPrefix,             value: k           }
  - { key: readability-identifier-naming.MacroDefinitionCase,              value: UPPER_CASE  }
  - { key: readability-identifier-naming.ClassMemberSuffix,                value: _           }
  - { key: readability-identifier-naming.PrivateMemberSuffix,              value: _           }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,            value: _           }
  - { key: readability-implicit-bool-conversion.AllowIntegerConditions,    value: 1           }
  - { key: readability-implicit-bool-conversion.AllowPointerConditions,    value: 1           }
  - { key: readability-function-cognitive-complexity.IgnoreMacros,         value: 1           }
  - { key: readability-function-size.LineThreshold,                        value: 1000        }
  - { key: readability-function-size.StatementThreshold,                   value: 500         }
  - { key: readability-function-size.BranchThreshold,                      value: 50          }
  - { key: readability-function-size.ParameterThreshold,                   value: 10          }
...
